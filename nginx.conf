events {}

http {
    # Настройки защиты
    limit_req_zone $binary_remote_addr zone=api:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    map $http_user_agent $bad_bot {
        default 0;
        ~*(ahrefs|semrush|mj12bot|dotbot|petalbot) 1;
        ~*(scanner|crawler|spider|bot) 0;
        ~*(googlebot|bingbot|yandex) 0;
    }

    server {
        listen 443 ssl;
        server_name python-project.online;

        # БЛОКИРОВКА IP-АДРЕСОВ
        deny 115.190.90.107;

        # Защита от ботов
        if ($bad_bot) {
            return 403;
        }

        # Безопасные заголовки
        server_tokens off;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # SSL
        ssl_certificate /etc/letsencrypt/live/python-project.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/python-project.online/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Корневой URL - редирект на документацию (без слэша)
        location = / {
            return 302 /docs;
        }

        # Основной location - убираем trailing slashes
        location / {
            limit_req zone=general burst=20 nodelay;

            # Убираем trailing slash перед проксированием
            rewrite ^/(.*)/$ /$1 permanent;

            proxy_pass http://booking_back:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_redirect http://$host/ https://$host/;
            proxy_redirect http://$server_name/ https://$server_name/;
        }

        # Блокировка чувствительных файлов
        location ~ /\.(ht|git|env|sql|log|tar|gz) {
            deny all;
            return 404;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name python-project.online;
        return 301 https://$server_name$request_uri;
    }
}
